name: Release npm package
on:
  workflow_dispatch:
    inputs:
      version-bump:
        description: The scale of the version bump required for semver compatibility
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
concurrency: release
jobs:
  release:
    name: "Release & Publish"
    runs-on: ubuntu-latest
    steps:
      - name: 🧮 Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ secrets.ELEMENT_BOT_TOKEN }}

      - name: 🔧 Set up node environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          cache: "yarn"
          node-version-file: ".node-version"

      - name: 🛠️ Setup
        # When running `install` it also calls the `prepare` step which generates
        # a build
        run: yarn install --pure-lockfile

      - name: 👊 Bump version
        run: |
          yarn version --no-git-tag-version --${{ github.event.inputs.version-bump }}
          git config --global user.name 'ElementRobot'
          git config --global user.email 'releases@riot.im'
          git commit -am "${{ github.event.inputs.version-bump }} version bump"
          git push
      - name: 🚀 Publish to npm
        id: npm-publish
        uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c # v3
        with:
          token: ${{ secrets.ELEMENT_NPM_TOKEN }}
          access: public

      - name: 🧬 Create release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.npm-publish.outputs.version }}
          release_name: Release ${{ steps.npm-publish.outputs.version }}
          body: ${{ steps.npm-publish.outputs.version }} Release
          draft: false
          prerelease: false
