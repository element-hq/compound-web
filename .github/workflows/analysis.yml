name: Analysis
on:
  pull_request: {}
  push:
    branches: [develop, main]
jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          cache: "yarn"
          node-version-file: ".node-version"
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Lint
        run: "yarn run lint"
      - name: Check formatting
        run: "yarn run prettier:check"
  test:
    name: "Unit test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          cache: "yarn"
          node-version-file: ".node-version"
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Test
        run: "yarn run test --coverage"
      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage
          path: |
            coverage
            !coverage/lcov-report
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@ffc3010689be73b8e5ae0c57ce35968afd7909e8 # v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  e2e:
    name: "Test end-to-end"
    # This must be kept in sync with the version of ubuntu used in the Docker
    # image, in playwright/Dockerfile
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          cache: "yarn"
          node-version-file: ".node-version"
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Build Storybook
        run: yarn build-storybook
      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(yarn list --pattern @playwright/test --depth=0 --json --non-interactive --no-progress | jq -r '.data.trees[].name')" >> $GITHUB_ENV
      - name: Cache Playwright binaries
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright binaries
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn playwright install --with-deps
      - name: Run Playwright tests
        # We use this action to get a virtual frame buffer for the browsers
        uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3 # v1
        with:
          run: yarn playwright test -j 100%
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
