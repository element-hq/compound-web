{"version":3,"file":"Icon.stories-58751c06.js","sources":["../../src/components/Icon/useDynamicSvgImport.ts","../../src/components/Icon/Icon.tsx","../../src/components/Icon/Icon.stories.tsx"],"sourcesContent":["/*\nCopyright 2023 New Vector Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { useEffect, useRef, useState } from \"react\";\n\nexport function useDynamicSvgImport(iconName: string) {\n  const importedIconRef = useRef<React.FC<React.SVGProps<SVGElement>>>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<unknown>();\n\n  useEffect(() => {\n    setLoading(true);\n    // dynamically import the mentioned svg icon name in props\n    const importSvgIcon = async (): Promise<void> => {\n      // All SVGs must be in the `icons/` folder as there are some tooling limitation\n      // with Vite and dynamic imports, see\n      // https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations\n      try {\n        importedIconRef.current = (\n          await import(`./icons/${iconName}.svg`)\n        ).ReactComponent; // svgr does the transform to ReactComponent for a svg path\n      } catch (err) {\n        setError(err);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    importSvgIcon();\n  }, [iconName]);\n\n  return { error, loading, SvgIcon: importedIconRef.current };\n}\n","/*\nCopyright 2023 New Vector Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React from \"react\";\nimport { useDynamicSvgImport } from \"./useDynamicSvgImport\";\n\n/**\n * TODO: Generate this union dynamically as part of the design tokens transformation\n */\ntype CompoundIcons = \"thread\";\n\nexport const Icon = ({\n  size = 32,\n  icon,\n  ...props\n}: {\n  size?: number;\n  icon: CompoundIcons;\n} & React.SVGAttributes<SVGElement>): JSX.Element => {\n  const { SvgIcon } = useDynamicSvgImport(icon);\n\n  // TODO: Loading indicator?\n\n  if (SvgIcon) {\n    return <SvgIcon {...props} width={size} height={size} />;\n  } else {\n    /**\n     * We render an empty SVG during loading of if the import errored-out\n     * To fill in the space the icon should have taken, this avoids layout shifts\n     */\n    return <svg aria-hidden=\"true\" width={size} height={size} />;\n  }\n};\n","/*\nCopyright 2023 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React from \"react\";\nimport { Meta, StoryFn } from \"@storybook/react\";\nimport { Icon as IconComponent } from \"./Icon\";\nexport default ({\n  title: \"Icon\",\n  component: IconComponent,\n  argTypes: {}\n} as Meta<typeof IconComponent>);\nconst Template: StoryFn<typeof IconComponent> = () => <IconComponent icon=\"thread\" />;\nexport const Icon = Template.bind({});\nIcon.args = {};\nIcon.parameters = {\n  ...Icon.parameters,\n  docs: {\n    ...Icon.parameters?.docs,\n    source: {\n      originalSource: \"() => <IconComponent icon=\\\"thread\\\" />\",\n      ...Icon.parameters?.docs?.source\n    }\n  }\n};"],"names":["useDynamicSvgImport","iconName","importedIconRef","useRef","loading","setLoading","useState","error","setError","useEffect","__variableDynamicImportRuntimeHelper","err","Icon","size","icon","props","SvgIcon","jsx","Icon_stories","IconComponent","Template","_a","_c","_b"],"mappings":"8aAkBO,SAASA,EAAoBC,EAAkB,CACpD,MAAMC,EAAkBC,EAAAA,SAClB,CAACC,EAASC,CAAU,EAAIC,WAAS,EAAK,EACtC,CAACC,EAAOC,CAAQ,EAAIF,EAAkB,SAAA,EAE5CG,OAAAA,EAAAA,UAAU,IAAM,CACdJ,EAAW,EAAI,GAEO,SAA2B,CAI3C,GAAA,CACFH,EAAgB,SACd,MAAMQ,EAAA,OAAA,OAAA,CAAA,qBAAA,UAAA,OAAA,sBAAA,EAAA,mBAAA,YAAA,GAAA,CAAA,CAAA,EAAA,WAAAT,OAAA,GACN,qBACKU,GACPH,EAASG,CAAG,EACZ,QAAQ,MAAMA,CAAG,CAAA,QACjB,CACAN,EAAW,EAAK,CAClB,CAAA,IAGY,EACb,CAACJ,CAAQ,CAAC,EAEN,CAAE,MAAAM,EAAO,QAAAH,EAAS,QAASF,EAAgB,OAAQ,CAC5D,CCtBO,MAAAU,EAAA,CAAA,CAAc,KAAAC,EAAA,GACZ,KAAAC,EACP,GAAAC,CAEF,IAAA,CAIE,KAAA,CAAA,QAAAC,CAAA,EAAAhB,EAAAc,CAAA,EAIA,OAAAE,EACEC,EAAAD,EAAA,CAAA,GAAAD,EAAA,MAAAF,EAAA,OAAAA,CAAA,CAAA,EAMAI,EAAA,MAAA,CAAA,cAAA,OAAA,MAAAJ,EAAA,OAAAA,CAAA,CAAA,CAEJ,iRC1BA,MAAgBK,EAAA,CACd,MAAO,OACP,UAAWC,EACX,SAAU,CAAC,CACb,EACMC,EAA0C,IAAOH,EAAAE,EAAA,CAAc,KAAK,QAAS,CAAA,EACtEP,EAAOQ,EAAS,KAAK,EAAE,EACpCR,EAAK,KAAO,CAAA,YACZA,EAAK,WAAa,CAChB,GAAGA,EAAK,WACR,KAAM,CACJ,IAAGS,EAAAT,EAAK,aAAL,YAAAS,EAAiB,KACpB,OAAQ,CACN,eAAgB,wCAChB,IAAGC,GAAAC,EAAAX,EAAK,aAAL,YAAAW,EAAiB,OAAjB,YAAAD,EAAuB,MAC5B,CACF,CACF"}