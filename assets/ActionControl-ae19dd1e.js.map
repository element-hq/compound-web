{"version":3,"file":"ActionControl-ae19dd1e.js","sources":["../../src/components/ActionControl/ActionControl.tsx"],"sourcesContent":["/*\nCopyright 2023 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport classnames from \"classnames\";\nimport React, { PropsWithChildren, forwardRef } from \"react\";\nimport styles from \"./ActionControl.module.css\";\n\nimport { Control, Field, Root } from \"../Form\";\nimport useId from \"../../utils/useId\";\n\ntype ActionControlProps = {\n  /**\n   * The CSS class name.\n   */\n  className?: string;\n  /**\n   * The React component to display on the right hand side of the icon.\n   */\n  Icon: React.FunctionComponent<React.SVGAttributes<SVGElement>>;\n  /**\n   * On click callback for the icon on the right hand side\n   */\n  onActionClick: (e: React.MouseEvent) => void;\n  /**\n   * The name of the action to perform (e.g. \"Copy to clipboard\")\n   */\n  actionLabel: string;\n  disabled?: boolean;\n} & React.ComponentProps<typeof Control>;\n\n/**\n * A generic input with an action icon on the right hand side.\n * You should rarely use it directly,\n * but it is powering the likes of \"copy to clipboard input\", \"password reveal\", ...\n */\nexport const ActionControl = forwardRef<\n  HTMLInputElement,\n  PropsWithChildren<ActionControlProps>\n>(function ActionControl(\n  { children, Icon, className, actionLabel, onActionClick, ...props },\n  ref,\n) {\n  const id = useId();\n  const classes = classnames(styles.actioncontrol, className);\n  return (\n    <div className={classes}>\n      <Control\n        ref={ref}\n        {...props}\n        className={styles.input}\n        id={id}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n      >\n        {children}\n      </Control>\n      <Icon\n        width={24}\n        height={24}\n        onClick={onActionClick}\n        className={styles.icon}\n        aria-label={actionLabel}\n        aria-controls={id}\n        role=\"button\"\n      />\n    </div>\n  );\n});\n\nexport const StandaloneActionControl = forwardRef<\n  HTMLInputElement,\n  PropsWithChildren<ActionControlProps>\n>(function StandaloneActionControl(props, ref) {\n  return (\n    <Root>\n      <Field name=\"action\">\n        <ActionControl ref={ref} {...props} />\n      </Field>\n    </Root>\n  );\n});\n"],"names":["ActionControl","forwardRef","children","Icon","className","actionLabel","onActionClick","props","ref","id","useId","classes","classnames","styles","jsxs","jsx","Control","StandaloneActionControl","Root","Field"],"mappings":"yUAgDOA,EAAAC,EAAA,WAAA,SAAA,CAAA,SAAAC,EAAA,KAAAC,EAAA,UAAAC,EAAA,YAAAC,EAAA,cAAAC,EAAA,GAAAC,CAAA,EAAAC,EAAA,CAOL,MAAAC,EAAAC,IACAC,EAAAC,EAAAC,EAAA,cAAAT,CAAA,EACA,OAAAU,EAAA,KAAA,MAAA,CAAA,UAAAH,EAAA,SAAA,CAEII,EAAA,IAAAC,EAAC,CAAA,IAAAR,EACC,GAAAD,EACI,UAAAM,EAAA,MACc,GAAAJ,EAClB,aAAA,MACa,YAAA,MACD,SAAAP,CAEX,CAAA,EACHa,EAAA,IACAZ,EAAC,CAAA,MAAA,GACQ,OAAA,GACC,QAAAG,EACC,UAAAO,EAAA,KACS,aAAAR,EACN,gBAAAI,EACG,KAAA,QACV,CAAA,CACP,CAAA,CAAA,CAGN,CAAA,EAEOQ,EAAAhB,EAAAA,WAAA,SAAAM,EAAAC,EAAA,CAIL,OAAAO,EAAAA,IAAAG,EAAA,CAAA,SAAAH,EAAAA,IAAAI,EAAA,CAAA,KAAA,SAAA,SAAAJ,EAAA,IAAAf,EAAA,CAAA,IAAAQ,EAAA,GAAAD,EAAA,CAAA,CAAA,CAAA,CAAA,CAOF,CAAA;;"}