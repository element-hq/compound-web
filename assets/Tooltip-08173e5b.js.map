{"version":3,"file":"Tooltip-08173e5b.js","sources":["../../src/components/Tooltip/TooltipContext.ts","../../src/components/Tooltip/useTooltip.ts","../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["/*\n *\n * Copyright 2024 New Vector Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * /\n */\n\nimport { createContext, useContext } from \"react\";\nimport { useTooltip } from \"./useTooltip\";\n\ntype ContextType = ReturnType<typeof useTooltip> | null;\n/**\n * The context for the Tooltip components.\n */\nexport const TooltipContext = createContext<ContextType>(null);\n\n/**\n * Provides the context for the Tooltip components.\n */\nexport function useTooltipContext() {\n  const context = useContext(TooltipContext);\n\n  if (context == null) {\n    throw new Error(\"Tooltip components must be wrapped in <Tooltip />\");\n  }\n\n  return context;\n}\n","/*\n *\n * Copyright 2024 New Vector Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * /\n */\n\nimport {\n  arrow,\n  autoUpdate,\n  flip,\n  offset,\n  OpenChangeReason,\n  Placement,\n  shift,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useId,\n  useInteractions,\n  useRole,\n} from \"@floating-ui/react\";\nimport { useMemo, useRef, useState, JSX } from \"react\";\n\ninterface UseTooltipProps {\n  /**\n   * The controlled open state of the tooltip.\n   * If provided, the tooltip will be in controlled mode.\n   * When true, the tooltip is always open. When false, the tooltip is always hidden.\n   * When undefined, the tooltip will manage its own open state.\n   * You will mostly want to omit this property. Will be used the vast majority\n   * of the time during development.\n   * @default undefined\n   */\n  open?: boolean;\n\n  /**\n   * Whether the tooltip should be forced to be in a closed state.\n   */\n  disabled?: boolean;\n\n  /**\n   * The placement of the release announcement.\n   */\n  placement: Placement;\n  /**\n   * The caption of the tooltip.\n   * JSX.Element can be used to provide accessibility content like kbd element.\n   * Keep in mind, the caption should not be used for interactive content.\n   */\n  caption?: string | JSX.Element;\n  /**\n   * The event handler for the open change.\n   */\n  onOpenChange?: (\n    open: boolean,\n    event?: Event | undefined,\n    reason?: OpenChangeReason | undefined,\n  ) => void;\n  /**\n   * Whether the trigger element is interactive.\n   * When trigger is interactive:\n   *      - tooltip will be shown after a 300ms delay.\n   * When trigger is not interactive:\n   *      - tooltip will be shown instantly when pointer enters trigger.\n   *      - trigger will be wrapped in a span with a tab index from prop nonInteractiveTriggerTabIndex\n   * @default true\n   */\n  isTriggerInteractive: boolean;\n}\n\nexport function useTooltip({\n  open: controlledOpen,\n  disabled = false,\n  placement,\n  onOpenChange,\n  isTriggerInteractive,\n  caption,\n}: UseTooltipProps) {\n  // Set on `aria-labelledby` attribute\n  const labelId = useId();\n  // Set on `aria-describedby` attribute\n  const captionId = useId();\n  const arrowRef = useRef(null);\n\n  const [uncontrolledOpen, setUncontrolledOpen] = useState(false);\n\n  // Use controlledOpen if it is provided, otherwise use uncontrolledOpen\n  const open = disabled ? false : controlledOpen ?? uncontrolledOpen;\n  const setOpen = (\n    open: boolean,\n    event?: Event | undefined,\n    reason?: OpenChangeReason | undefined,\n  ) => {\n    onOpenChange?.(open, event, reason);\n    // we are in uncontrolled mode\n    if (controlledOpen === undefined) setUncontrolledOpen(open);\n  };\n\n  const data = useFloating({\n    placement,\n    open,\n    onOpenChange: setOpen,\n    whileElementsMounted: autoUpdate,\n    middleware: [\n      // arrow height 6px\n      offset(6),\n      flip({\n        crossAxis: placement.includes(\"-\"),\n        fallbackAxisSideDirection: \"start\",\n        padding: 5,\n      }),\n      shift({ padding: 5 }),\n      // add the little arrow along with the floating content\n      arrow({\n        element: arrowRef,\n      }),\n    ],\n  });\n\n  const context = data.context;\n  const hover = useHover(context, {\n    move: false,\n    enabled: controlledOpen === undefined,\n    // Show tooltip after a delay when trigger is interactive\n    delay: { open: isTriggerInteractive ? 300 : 0 },\n  });\n  const focus = useFocus(context, {\n    enabled: controlledOpen === undefined,\n    visibleOnly: false,\n  });\n  const dismiss = useDismiss(context);\n  const role = useRole(context, { role: \"tooltip\" });\n\n  const interactions = useInteractions([hover, focus, dismiss, role]);\n\n  return useMemo(\n    () => ({\n      labelId,\n      captionId: caption ? captionId : undefined,\n      caption,\n      open,\n      setOpen,\n      ...interactions,\n      ...data,\n      arrowRef,\n    }),\n    [labelId, captionId, caption, open, setOpen, interactions, data, arrowRef],\n  );\n}\n","/*\nCopyright 2023-2024 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { TooltipContext, useTooltipContext } from \"./TooltipContext\";\nimport {\n  FloatingArrow,\n  FloatingPortal,\n  Placement,\n  useMergeRefs,\n} from \"@floating-ui/react\";\nimport React, {\n  PropsWithChildren,\n  Ref,\n  JSX,\n  isValidElement,\n  cloneElement,\n  useMemo,\n} from \"react\";\n\nimport classNames from \"classnames\";\nimport styles from \"./Tooltip.module.css\";\nimport { useTooltip } from \"./useTooltip\";\n\ntype UseTooltipParam = Parameters<typeof useTooltip>[0];\n\ninterface TooltipProps\n  extends Omit<UseTooltipParam, \"placement\" | \"isTriggerInteractive\"> {\n  /**\n   * The placement of the component\n   * @default \"bottom\"\n   */\n  placement?: Placement;\n  /**\n   * Whether the trigger element is interactive.\n   * When trigger is interactive:\n   *      - tooltip will be shown after a 300ms delay.\n   * When trigger is not interactive:\n   *      - tooltip will be shown instantly when pointer enters trigger.\n   *      - trigger will be wrapped in a span with a tab index from prop nonInteractiveTriggerTabIndex\n   * @default true\n   */\n  isTriggerInteractive?: boolean;\n  /**\n   * The tab index for the non interactive trigger.\n   * @default 0\n   */\n  nonInteractiveTriggerTabIndex?: number;\n  /**\n   * The tooltip label\n   */\n  label: string;\n}\n\n/**\n * A tooltip component\n */\nexport function Tooltip({\n  children,\n  placement = \"bottom\",\n  isTriggerInteractive = true,\n  nonInteractiveTriggerTabIndex = 0,\n  label,\n  ...props\n}: PropsWithChildren<TooltipProps>): JSX.Element {\n  const context = useTooltip({ placement, isTriggerInteractive, ...props });\n\n  return (\n    <TooltipContext.Provider value={context}>\n      <TooltipAnchor>\n        {isTriggerInteractive ? (\n          children\n        ) : (\n          <span tabIndex={nonInteractiveTriggerTabIndex}>{children}</span>\n        )}\n      </TooltipAnchor>\n      <TooltipContent>\n        <span id={context.labelId}>{label}</span>\n        <Caption />\n      </TooltipContent>\n    </TooltipContext.Provider>\n  );\n}\n\nfunction Caption() {\n  const { caption, captionId } = useTooltipContext();\n  if (!caption) return null;\n\n  const isCaptionString = typeof caption === \"string\";\n  const Container = isCaptionString ? \"span\" : \"div\";\n\n  /**\n   * Forcing dark theme, so that we have the correct contrast when\n   * using the text color secondary on a solid dark background.\n   * This is temporary and should only remain until we figure out\n   * the approach to on-solid tokens\n   **/\n  return (\n    <Container\n      id={captionId}\n      className={classNames(styles.caption, \"cpd-theme-dark\")}\n    >\n      {caption}\n    </Container>\n  );\n}\n\n/**\n * The content of the tooltip\n * @param children\n */\nfunction TooltipContent({\n  children,\n}: Readonly<PropsWithChildren>): JSX.Element | null {\n  const { context: floatingContext, arrowRef, ...rest } = useTooltipContext();\n\n  if (!floatingContext.open) return null;\n\n  return (\n    <FloatingPortal>\n      <div\n        ref={rest.refs.setFloating}\n        aria-labelledby={rest.labelId}\n        aria-describedby={rest.captionId || rest.labelId}\n        style={rest.floatingStyles}\n        {...rest.getFloatingProps()}\n        className={styles.tooltip}\n      >\n        <FloatingArrow\n          ref={arrowRef}\n          context={floatingContext}\n          // design absolute value\n          width={10}\n          height={6}\n          className={styles.arrow}\n        />\n        {children}\n      </div>\n    </FloatingPortal>\n  );\n}\n\n/**\n * The anchor of the tooltip\n * @param children\n */\nfunction TooltipAnchor({ children }: Readonly<PropsWithChildren>): JSX.Element {\n  const context = useTooltipContext();\n\n  // The children can have a ref and we don't want to discard it\n  // Doing a dirty cast to get the optional ref\n  const childrenRef = (children as unknown as { ref?: Ref<HTMLElement> })?.ref;\n  const ref = useMergeRefs([context.refs.setReference, childrenRef]);\n\n  // We need to check `isValidElement` to infer the type of `children`\n  const childrenProps = isValidElement(children) && children.props;\n\n  const element = useMemo(() => {\n    if (!isValidElement(children)) return;\n\n    const props = context.getReferenceProps({\n      ref,\n      ...childrenProps,\n    });\n    return cloneElement(children, props);\n  }, [ref, children, childrenProps]);\n\n  if (!element) {\n    throw new Error(\"Tooltip anchor must be a single valid React element\");\n  }\n\n  return element;\n}\n"],"names":["TooltipContext","createContext","useTooltipContext","context","useContext","useTooltip","controlledOpen","disabled","placement","onOpenChange","isTriggerInteractive","caption","labelId","useId","captionId","arrowRef","useRef","uncontrolledOpen","setUncontrolledOpen","useState","open","setOpen","event","reason","data","useFloating","autoUpdate","offset","flip","shift","arrow","hover","useHover","focus","useFocus","dismiss","useDismiss","role","useRole","interactions","useInteractions","useMemo","Tooltip","children","nonInteractiveTriggerTabIndex","label","props","jsxs","jsx","TooltipAnchor","TooltipContent","Caption","Container","classNames","styles","floatingContext","rest","FloatingPortal","FloatingArrow","childrenRef","ref","useMergeRefs","childrenProps","isValidElement","element","cloneElement"],"mappings":"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"}