import{j as n}from"./jsx-runtime-DoxjgJx5.js";import{c as N}from"./index-C2KoGaFq.js";import{r as l}from"./index-Cu9bd8lq.js";import{T as M}from"./Text-CFqa5qYe.js";import{S as I}from"./index-B2VpcjXg.js";const u=l.createContext(null);try{u.displayName="MenuContext",u.__docgenInfo={description:`A React context providing information about the menu in which a given
component resides.`,displayName:"MenuContext",props:{}}}catch{}const V="_item_1gwvj_17",E="_interactive_1gwvj_36",T="_icon_1gwvj_44",k="_label_1gwvj_53",q="_disabled_1gwvj_119",e={item:V,interactive:E,"no-label":"_no-label_1gwvj_40",icon:T,label:k,"nav-hint":"_nav-hint_1gwvj_60",disabled:q},R=a=>n.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:"1em",height:"1em",fill:"currentColor",viewBox:"0 0 24 24",className:"cpd-icon",...a,children:n.jsx("path",{d:"M8.7 17.3a.948.948 0 0 1-.275-.7.95.95 0 0 1 .275-.7l3.9-3.9-3.9-3.9a.948.948 0 0 1-.275-.7.95.95 0 0 1 .275-.7.948.948 0 0 1 .7-.275.95.95 0 0 1 .7.275l4.6 4.6c.1.1.17.208.213.325.041.117.062.242.062.375s-.02.258-.063.375a.876.876 0 0 1-.212.325l-4.6 4.6a.948.948 0 0 1-.7.275.948.948 0 0 1-.7-.275Z"})}),p=({as:a,className:h,Icon:o,label:s,labelProps:v,onSelect:t,kind:b="primary",children:f,onClick:_,disabled:m,...g})=>{const r=a??"button",i=l.useContext(u),y=l.useCallback(C=>{if(_?.(C),t!==null&&i?.MenuItemWrapper==null){const d=new CustomEvent("menu.itemSelect",{bubbles:!0,cancelable:!0});t(d),d.defaultPrevented||i?.onOpenChange(!1)}},[i,t]),w=l.isValidElement(o),x=o,j=o,c=n.jsxs(r,{role:"menuitem",...g,className:N(h,e.item,{[e.interactive]:t!==null,[e["no-label"]]:s===null,[e.disabled]:m}),"data-kind":b,onClick:y,disabled:m,children:[w?n.jsx(I,{className:e.icon,children:x}):n.jsx(j,{width:24,height:24,className:e.icon,"aria-hidden":!0}),s!==null&&n.jsx(M,{className:e.label,size:"md",weight:"medium",as:"span",...v,children:s}),(r==="button"||r==="a")&&n.jsx(R,{width:8,height:24,className:e["nav-hint"],"aria-hidden":!0,viewBox:"8 0 8 24"}),f]});return i?.MenuItemWrapper==null||t===null?c:n.jsx(i.MenuItemWrapper,{onSelect:t,children:c})};try{p.displayName="MenuItem",p.__docgenInfo={description:"An item within a menu, acting either as a navigation button, or simply a\ncontainer for other interactive elements.\nMust be used within a compound Menu or other `menu` or `menubar` aria role subtree.",displayName:"MenuItem",props:{as:{defaultValue:{value:"button"},description:"The element type of this menu item.",name:"as",required:!1,type:{name:"enum",value:[{value:'"a"'},{value:'"button"'},{value:'"div"'},{value:'"label"'}]}},className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},Icon:{defaultValue:null,description:"The icon to show on this menu item.\nWhen `Icon` is a ReactNode, it should spread the props",name:"Icon",required:!0,type:{name:"ReactNode | ComponentType<SVGAttributes<SVGElement>>"}},label:{defaultValue:null,description:"The label to show on this menu item.",name:"label",required:!0,type:{name:"string | null"}},labelProps:{defaultValue:null,description:"Additional properties to pass to the Text label component.",name:"labelProps",required:!1,type:{name:'Omit<Omit<{ as?: ElementType<any>; type?: "body" | "heading"; weight?: "medium" | "bold" | "regular" | "semibold" | undefined; size?: "sm" | "lg" | "xs" | "md" | "xl" | undefined; className?: string | undefined; } & Omit<...> & { ...; }, "type"> & { ...; }, "ref"> | undefined'}},onSelect:{defaultValue:null,description:`Event callback for when the item is selected via mouse, touch, or keyboard.
Calling event.preventDefault in this handler will prevent the menu from
being dismissed.`,name:"onSelect",required:!0,type:{name:"((e: Event) => void) | null"}},kind:{defaultValue:{value:"primary"},description:"The color variant of the menu item.",name:"kind",required:!1,type:{name:"enum",value:[{value:'"critical"'},{value:'"primary"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}export{p as M,u as a};
