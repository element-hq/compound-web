{"version":3,"file":"ReleaseAnnouncement.stories-a66bf9dc.js","sources":["../../src/components/ReleaseAnnouncement/ReleaseAnnouncementContext.ts","../../src/components/ReleaseAnnouncement/useReleaseAnnouncement.tsx","../../src/components/ReleaseAnnouncement/ReleaseAnnouncement.tsx"],"sourcesContent":["/*\nCopyright 2024 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { createContext, useContext } from \"react\";\nimport { useReleaseAnnouncement } from \"./useReleaseAnnouncement\";\n\ntype ContextType = ReturnType<typeof useReleaseAnnouncement> | null;\n/**\n * The context for the ReleaseAnnouncement components.\n */\nexport const ReleaseAnnouncementContext = createContext<ContextType>(null);\n\n/**\n * Provides the context for the ReleaseAnnouncement components.\n */\nexport function useReleaseAnnouncementContext() {\n  const context = useContext(ReleaseAnnouncementContext);\n\n  if (context == null) {\n    throw new Error(\n      \"ReleaseAnnouncement components must be wrapped in <ReleaseAnnouncement />\",\n    );\n  }\n\n  return context;\n}\n","/*\nCopyright 2024 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {\n  arrow,\n  autoUpdate,\n  limitShift,\n  offset,\n  Placement,\n  shift,\n  useFloating,\n  useId,\n  useInteractions,\n  useRole,\n} from \"@floating-ui/react\";\nimport { MouseEventHandler, useMemo, useRef } from \"react\";\n\ninterface UseReleaseAnnouncementProps {\n  /**\n   * Whether the release announcement is open.\n   */\n  open: boolean;\n  /**\n   * The header of the release announcement.\n   */\n  header: string;\n  /**\n   * The description of the release announcement.\n   */\n  description: string;\n  /**\n   * The label of the close button.\n   */\n  closeLabel: string;\n  /**\n   * The placement of the release announcement.\n   */\n  placement: Placement;\n  /**\n   * The event handler for the close button.\n   */\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}\n\n/**\n * This hook provides the necessary props to create a release announcement.\n */\nexport function useReleaseAnnouncement({\n  open,\n  header,\n  description,\n  closeLabel,\n  placement,\n  onClick,\n}: UseReleaseAnnouncementProps) {\n  // Set on `aria-labelledby` attribute\n  const labelId = useId();\n  // Set on `aria-describedby` attribute\n  const descriptionId = useId();\n  const arrowRef = useRef(null);\n\n  const data = useFloating({\n    placement,\n    open,\n    whileElementsMounted: autoUpdate,\n    middleware: [\n      // arrow height 12px + 4px padding\n      offset(16),\n      shift({ limiter: limitShift({ offset: 50 }) }),\n      // add the little arrow along with the floating content\n      arrow({\n        element: arrowRef,\n      }),\n    ],\n  });\n\n  // The role is used to determine the correct aria role for the floating content.\n  const role = useRole(data.context);\n  const interactions = useInteractions([role]);\n\n  // Put in the context all the useful data and interactions\n  return useMemo(\n    () => ({\n      open,\n      ...data,\n      ...interactions,\n      labelId,\n      descriptionId,\n      header,\n      description,\n      closeLabel,\n      onClick,\n      arrowRef,\n    }),\n    [\n      open,\n      role,\n      interactions,\n      data,\n      labelId,\n      descriptionId,\n      header,\n      description,\n      closeLabel,\n      onClick,\n      arrowRef,\n    ],\n  );\n}\n","/*\nCopyright 2024 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, {\n  cloneElement,\n  isValidElement,\n  JSX,\n  PropsWithChildren,\n  Ref,\n} from \"react\";\nimport {\n  FloatingPortal,\n  FloatingFocusManager,\n  Placement,\n  useMergeRefs,\n  FloatingArrow,\n} from \"@floating-ui/react\";\nimport { Text } from \"../Typography/Text\";\nimport { Button } from \"../Button\";\nimport styles from \"./ReleaseAnnouncement.module.css\";\nimport {\n  useReleaseAnnouncementContext,\n  ReleaseAnnouncementContext,\n} from \"./ReleaseAnnouncementContext\";\nimport { useReleaseAnnouncement } from \"./useReleaseAnnouncement\";\n\ntype UseReleaseAnnouncementParam = Parameters<typeof useReleaseAnnouncement>[0];\n\ninterface ReleaseAnnouncementProps\n  extends Omit<UseReleaseAnnouncementParam, \"placement\"> {\n  /**\n   * The placement of the component\n   * @default \"right\"\n   */\n  placement?: Placement;\n}\n\n/**\n * The ReleaseAnnouncement component purpose is to inform the user of a new available feature.\n * This component is a floating component that will appear next to an anchor.\n * @param children - Act as an anchor, the component will be displayed alongside of it.\n * @param placement - The placement of the component\n */\nexport function ReleaseAnnouncement({\n  /**\n   * The children anchor should be a single valid React element.\n   */\n  children,\n  placement = \"right\",\n  ...props\n}: PropsWithChildren<ReleaseAnnouncementProps>): JSX.Element {\n  const context = useReleaseAnnouncement({ placement, ...props });\n\n  return (\n    <ReleaseAnnouncementContext.Provider value={context}>\n      <ReleaseAnnouncementAnchor>{children}</ReleaseAnnouncementAnchor>\n      <ReleaseAnnouncementContainer>\n        <ReleaseAnnouncementContent />\n      </ReleaseAnnouncementContainer>\n    </ReleaseAnnouncementContext.Provider>\n  );\n}\n\n/**\n * The anchor for the ReleaseAnnouncement components.\n * The Release Announcement will appear next to this element.\n * @param children - should be a single valid React element\n * @constructor\n */\nfunction ReleaseAnnouncementAnchor({\n  children,\n}: Readonly<PropsWithChildren>): JSX.Element {\n  const context = useReleaseAnnouncementContext();\n\n  // The children can have a ref and we don't want to discard it\n  // Doing a dirty cast to get the optional ref\n  const childrenRef = (children as unknown as { ref?: Ref<HTMLElement> })?.ref;\n  const ref = useMergeRefs([context.refs.setReference, childrenRef]);\n\n  if (!isValidElement(children)) {\n    throw new Error(\n      \"ReleaseAnnouncement anchor must be a single valid React element\",\n    );\n  }\n\n  return cloneElement(\n    children,\n    context.getReferenceProps({\n      ref,\n      ...children.props,\n      // If the ReleaseAnnouncement is open, we need manually aria-describedby.\n      // The RA has the dialog role and it's not adding automatically the aria-describedby.\n      ...(context.open && {\n        \"aria-describedby\": context.getFloatingProps().id,\n      }),\n    }),\n  );\n}\n\n/**\n * The container for the ReleaseAnnouncement components.\n * Manage focus and positioning of the children.\n * @param children\n */\nfunction ReleaseAnnouncementContainer({\n  children,\n}: PropsWithChildren): JSX.Element | null {\n  const {\n    context: floatingContext,\n    arrowRef,\n    ...rest\n  } = useReleaseAnnouncementContext();\n\n  if (!floatingContext.open) return null;\n\n  return (\n    <FloatingPortal>\n      <FloatingFocusManager context={floatingContext} modal={false}>\n        <div\n          ref={rest.refs.setFloating}\n          style={rest.floatingStyles}\n          aria-labelledby={rest.labelId}\n          aria-describedby={rest.descriptionId}\n          {...rest.getFloatingProps()}\n          className={styles.content}\n        >\n          <FloatingArrow\n            ref={arrowRef}\n            context={floatingContext}\n            // design absolute value\n            width={20}\n            height={12}\n            className={styles.arrow}\n          />\n          {children}\n        </div>\n      </FloatingFocusManager>\n    </FloatingPortal>\n  );\n}\n\n/**\n * The content of the ReleaseAnnouncement component.\n * ---------------------------------------------------------------\n * - The header in a bold text                  -------------    -\n * - A description in a regular text           | Close button |  -\n * - Description can be on multiple lines       -------------    -\n * ---------------------------------------------------------------\n */\nfunction ReleaseAnnouncementContent(): JSX.Element {\n  const { labelId, descriptionId, header, description, closeLabel, onClick } =\n    useReleaseAnnouncementContext();\n\n  return (\n    <>\n      <Text\n        as=\"h3\"\n        id={labelId}\n        className={styles.header}\n        size=\"lg\"\n        weight=\"semibold\"\n      >\n        {header}\n      </Text>\n      <Text\n        as=\"span\"\n        id={descriptionId}\n        className={styles.description}\n        size=\"sm\"\n        weight=\"regular\"\n      >\n        {description}\n      </Text>\n      <Button\n        size=\"sm\"\n        kind=\"secondary\"\n        className={styles.button}\n        onClick={onClick}\n      >\n        {closeLabel}\n      </Button>\n    </>\n  );\n}\n"],"names":["ReleaseAnnouncementContext","createContext","useReleaseAnnouncementContext","context","useContext","useReleaseAnnouncement","open","header","description","closeLabel","placement","onClick","labelId","useId","descriptionId","arrowRef","useRef","data","useFloating","autoUpdate","offset","shift","limitShift","arrow","role","useRole","interactions","useInteractions","useMemo","ReleaseAnnouncement","children","props","jsxs","jsx","ReleaseAnnouncementAnchor","ReleaseAnnouncementContainer","ReleaseAnnouncementContent","childrenRef","ref","useMergeRefs","isValidElement","cloneElement","floatingContext","rest","FloatingPortal","FloatingFocusManager","styles","FloatingArrow","Fragment","Text","Button"],"mappings":"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"}