{"version":3,"file":"Button-dcdac7b3.js","sources":["../../src/components/Button/Button.tsx"],"sourcesContent":["/*\nCopyright 2023  New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport classNames from \"classnames\";\nimport React, {\n  ComponentType,\n  PropsWithChildren,\n  forwardRef,\n  ForwardedRef,\n  Ref,\n} from \"react\";\nimport styles from \"./Button.module.css\";\nimport { UnstyledButton, UnstyledButtonPropsFor } from \"./UnstyledButton\";\n\ninterface ButtonComponent {\n  // With the explicit `as` prop\n  <C extends React.ElementType>(\n    props: { as: C } & ButtonPropsFor<C>,\n  ): React.ReactElement;\n  // Without the explicit `as` prop, defaulting to a <button>\n  (props: ButtonPropsFor<\"button\">): React.ReactElement;\n}\n\ntype ButtonOwnProps = PropsWithChildren<{\n  /**\n   * The type of button.\n   */\n  kind?: \"primary\" | \"secondary\" | \"tertiary\" | \"destructive\"; // TODO: Refine the naming\n  /**\n   * The t-shirt size of the button.\n   */\n  size?: \"sm\" | \"lg\";\n  /**\n   * An icon to display within the button.\n   */\n  Icon?: ComponentType<React.SVGAttributes<SVGElement>>;\n}>;\n\ntype ButtonPropsFor<C extends React.ElementType> = ButtonOwnProps &\n  UnstyledButtonPropsFor<C>;\n\n/**\n * A button component that can be transformed into a link, but keep the button\n * styling using the `as` property.\n */\nexport const Button = forwardRef(function Button<\n  C extends React.ElementType = \"button\",\n>(\n  {\n    as,\n    kind = \"primary\",\n    size = \"lg\",\n    children,\n    className,\n    Icon,\n    disabled,\n    ...props\n  }: ButtonPropsFor<C> & { as?: C },\n  ref: ForwardedRef<C>,\n): React.ReactElement {\n  const classes = classNames(styles.button, className, {\n    [styles[\"has-icon\"]]: Icon,\n  });\n\n  return (\n    <UnstyledButton\n      {...props}\n      as={as || (\"button\" as const)}\n      ref={ref as Ref<C>}\n      className={classes}\n      data-size={size}\n      data-kind={kind}\n      tabIndex={0}\n      disabled={disabled}\n    >\n      {Icon && (\n        <Icon\n          width={20}\n          height={20}\n          className={styles.icon}\n          aria-hidden={true}\n        />\n      )}\n      {children}\n    </UnstyledButton>\n  );\n}) as ButtonComponent;\n"],"names":["Button","forwardRef","as","kind","size","children","className","Icon","disabled","props","ref","classes","classNames","styles","jsxs","UnstyledButton","jsx"],"mappings":"uPA0DOA,EAAAC,EAAAA,WAAA,SAAA,CAGL,GAAAC,EACE,KAAAC,EAAA,UACO,KAAAC,EAAA,KACA,SAAAC,EACP,UAAAC,EACA,KAAAC,EACA,SAAAC,EACA,GAAAC,CAEF,EAAAC,EAAA,CAGA,MAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAA,CAAqD,CAAAO,EAAA,UAAA,CAAA,EAAAN,CAC7B,CAAA,EAGxB,OAAAO,EAAA,KACEC,EAAC,CAAA,GAAAN,EACK,GAAAP,GAAA,SACO,IAAAQ,EACX,UAAAC,EACW,YAAAP,EACA,YAAAD,EACA,SAAA,EACD,SAAAK,EACV,SAAA,CAECD,GAAAS,EAAA,IACCT,EAAC,CAAA,MAAA,GACQ,OAAA,GACC,UAAAM,EAAA,KACU,cAAA,EACL,CAAA,EACfR,CAED,CAAA,CAAA,CAGP,CAAA"}