import{j as U}from"./jsx-runtime-D_zvdyIk.js";import{r as _}from"./index-CgfFrydU.js";const n=_.forwardRef(function({as:e,children:a,className:s,disabled:t,...r},d){const i=e||"button",{onClick:l,onSubmit:u,onPointerDown:p,onPointerUp:b,onKeyDown:c,onKeyUp:y,onKeyPress:m,...f}=r,x=t?{}:{onClick:l,onSubmit:u,onPointerDown:p,onPointerUp:b,onKeyDown:c,onKeyUp:y,onKeyPress:m};return U.jsx(i,{...f,ref:d,className:s,role:e==="a"?"link":"button",tabIndex:0,...x,"aria-disabled":t,children:a})});try{n.displayName="UnstyledButton",n.__docgenInfo={description:"Unstyled button component. Can be disabled and optionally rendered as an anchor.\nIntended to be wrapped with styles and exported as new button type - eg `IconButton` or `Button`.\n\nNot to be used externally.",displayName:"UnstyledButton",props:{as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},disabled:{defaultValue:null,description:"Note that disabled attribute is not added to buttons, so that disabled buttons are discoverable by keyboard.\n`aria-disabled` attribute is used to indicate button is disabled.\nEvent handlers are not passed to disabled buttons (onClick, onSubmit, etc.)",name:"disabled",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<ComponentRef<C>>"}}}}}catch{}export{n as U};
