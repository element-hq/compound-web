import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as x}from"./iframe-PWL6WNBy.js";import"./index-DF2Zw3H9.js";import{T as f}from"./Tooltip-B2sxEoVn.js";import{R as b}from"./Root-BGzjU-T9.js";import{F as u}from"./Field-C4CecOSP.js";import{L as o}from"./Label-xgzA5VP7.js";import{T as j}from"./Text-efT2jBiz.js";import{E as a,H as n}from"./Message-DDBFFzhW.js";import{a as g}from"./Password-DcCh-aLU.js";import{a as y}from"./MFA-QWy-D280.js";import{I as i}from"./InlineField-BcubDxKA.js";import{a as v}from"./Checkbox-B7o41xhq.js";import{a as h}from"./Radio-CeoWneRz.js";import{a as S}from"./Toggle-CFhj9s15.js";import{S as C}from"./index-B1_61P_C.js";import{B as E}from"./Button-D9yiokYT.js";import"./preload-helper-PPVm8Dsz.js";import"./floating-ui.react-DajYg7IH.js";import"./floating-ui.core-BbbQpTXO.js";import"./index-DJASgtDo.js";import"./index-BHjvA8fe.js";import"./index-DzRMPct8.js";import"./check-circle-solid-D09lLqv7.js";import"./error-solid-C7CeFB8P.js";import"./InlineSpinner-BJvGhXdG.js";import"./spinner-CONiRu17.js";import"./visibility-on-BQ37wkG0.js";import"./Action-0XyqJF5b.js";import"./check-C-6iaOIc.js";import"./index-BMBDXn91.js";import"./index-CTtKhWoJ.js";import"./index-FccS7TVf.js";import"./index-BZRsxxC5.js";import"./UnstyledButton-B0BGTUob.js";const p=x.forwardRef(function(r,t){return e.jsx(C,{asChild:!0,children:e.jsx(E,{type:"submit",ref:t,...r})})});try{p.displayName="Submit",p.__docgenInfo={description:"A stylised submit button for forms.",displayName:"Submit",props:{disabled:{defaultValue:null,description:"Note that disabled attribute is not added to buttons, so that disabled buttons are discoverable by keyboard.\n`aria-disabled` attribute is used to indicate button is disabled.\nEvent handlers are not passed to disabled buttons (onClick, onSubmit, etc.)",name:"disabled",required:!1,type:{name:"boolean"}},kind:{defaultValue:null,description:`The type of button.
Note: "destructive" is deprecated, please use the destructive prop in
conjunction with another button kind.`,name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"destructive"'}]}},destructive:{defaultValue:{value:"false"},description:"Whether this button triggers a destructive action.",name:"destructive",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"The t-shirt size of the button.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},iconOnly:{defaultValue:null,description:"Whether the button is an icon only button.",name:"iconOnly",required:!1,type:{name:"boolean"}},Icon:{defaultValue:null,description:"An icon to display within the button.",name:"Icon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGElement>>"}}}}}catch{}const I=({disabled:s,invalid:r,readOnly:t})=>e.jsx(f,{children:e.jsxs(b,{children:[e.jsxs(u,{serverInvalid:r,name:"mxid",children:[e.jsx(o,{children:"Username"}),e.jsx(j,{disabled:s,readOnly:t,defaultValue:"Hello world!"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(u,{serverInvalid:r,name:"password",children:[e.jsx(o,{children:"Password"}),e.jsx(g,{disabled:s,readOnly:t,defaultValue:"sup3rS3cur3p4ssw0rd!"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(u,{serverInvalid:r,name:"mfa",children:[e.jsx(o,{children:"MFA"}),e.jsx(y,{disabled:s,readOnly:t,defaultValue:"123"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"remember",control:e.jsx(v,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Remember me"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"radio",control:e.jsx(h,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Option 1"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"radio",control:e.jsx(h,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Option 2"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"toggle",control:e.jsx(S,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Toggle"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsx(p,{disabled:s,children:"Submit"})]})}),ie={title:"Form/Kitchen Sink",component:I,tags:["axe-exclude"],argTypes:{disabled:{type:"boolean"},readOnly:{type:"boolean"},invalid:{type:"boolean"}},args:{disabled:!1,readOnly:!1,invalid:!1}},l={},m={args:{disabled:!0}},d={args:{readOnly:!0}},c={args:{invalid:!0}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"{}",...l.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`{
  args: {
    disabled: true
  }
}`,...m.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:`{
  args: {
    readOnly: true
  }
}`,...d.parameters?.docs?.source}}};c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:`{
  args: {
    invalid: true
  }
}`,...c.parameters?.docs?.source}}};const le=["Normal","Disabled","ReadOnly","Invalid"];export{m as Disabled,c as Invalid,l as Normal,d as ReadOnly,le as __namedExportsOrder,ie as default};
