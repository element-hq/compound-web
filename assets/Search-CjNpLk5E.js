import{j as a}from"./jsx-runtime-CexXSJP5.js";import{c as u}from"./index-BSFQGMYZ.js";import{r}from"./index-BP8_t0zE.js";import"./Action-DpWob5LS.js";import"./Password-DPDp-Eyb.js";import{a as se}from"./Text-BpUtDsRn.js";import"./MFA-BcsE-4m7.js";import"./Checkbox-BHW8qkwR.js";import"./Radio-CFt7gJUV.js";import"./Toggle-BlCbqmZl.js";import{b as A,c as te,d as re,e as W,f as ne,g as N}from"./index-DA5mkyhX.js";import{C as le}from"./check-DrA_wPr-.js";import{C as oe,E as ie}from"./close-BapqxG5D.js";import{C as ce,S as de}from"./search-BC9ffyhQ.js";import{I as ue}from"./InlineSpinner-DZ2uBgAt.js";import{B as w}from"./Button-BLPDHEoz.js";import"./Alert-B-hND-IY.js";import"./Avatar-Bzl0WR0v.js";import"./AvatarStack-Bcn5PWWK.js";import"./Badge-DERiemOv.js";import"./IconButton-Db7JTW02.js";import{T as me}from"./Text-DQA-v0me.js";import"./ContextMenu-CvgE_T27.js";import"./Glass-CSik8Dag.js";import"./Heading-BzQEB82_.js";import"./IndicatorIcon-yC0g9ajQ.js";import"./Link-H_Ar01eM.js";import"./NavItem-BeIhRN_Q.js";import"./Menu-CK5oJ9qx.js";import"./MenuItem-D5bjBLJv.js";import"./Progress-kAo68Ncz.js";import{u as pe}from"./useId-DIHOOv91.js";import"./Separator-YkkwOwd9.js";import"./ToggleMenuItem-_3rdvkj3.js";import{T as F}from"./Tooltip-CHeTE3nE.js";import"./ReleaseAnnouncement-BKItNgir.js";import"./Toast-DFHCLnMH.js";/* empty css               */const $=({children:e,...s})=>a.jsx(me,{...s,children:e});try{$.displayName="Body",$.__docgenInfo={description:"",displayName:"Body",props:{size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'},{value:'"xs"'},{value:'"md"'}]}}}}}catch{}const fe="_search_qztja_17",he="_icon_qztja_46",ye="_input_qztja_61",C={search:fe,icon:he,input:ye},_e="_controls_1h4nb_17",q={controls:_e,"button-group":"_button-group_1h4nb_27"};function be(e,s){switch(s){case 0:return e===0||e===3?1:e;case 1:return 2;case 4:return 0;case 2:return e===2?3:e;case 3:return e===2?0:e;case 5:return e===3?0:e}ge(s)}function ge(e){throw new Error(`Unreachable value: ${e}`)}const k=r.forwardRef(function({className:s,label:t,onSave:l,onCancel:n,onInput:o,onClearServerErrors:f,serverInvalid:h,saveButtonLabel:y,cancelButtonLabel:P,savedLabel:R,savingLabel:O,helpLabel:E,disabled:U,children:G,...D},J){const[i,m]=r.useReducer(be,0),_=r.useRef(!1),[x,b]=r.useState(!1),X=i===1||i===2||x,p=r.useRef();r.useEffect(()=>(i===3&&(p.current=setTimeout(()=>{m(5),p.current=void 0},2e3)),()=>{p.current&&clearTimeout(p.current),p.current=void 0}),[i]);const K=r.useRef(null),L=r.useRef(null),S=r.useRef(null),Q=r.useCallback(()=>{_.current||(_.current=!0,b(!0))},[x,b]),Y=r.useCallback(d=>{_.current&&(d.currentTarget.contains(d.relatedTarget)||(_.current=!1,b(!1)))},[x,b]),Z=r.useCallback(d=>{m(0),o?.(d)},[m,o]),ee=r.useCallback(async d=>{if(d.preventDefault(),i!==0)try{m(1),L.current?.blur(),await l?.(d),m(2)}catch{m(3)}},[l,i,p]),ae=r.useCallback(d=>{S.current?.blur(),n?.(d),m(4)},[S,n]);return a.jsx(I,{className:s,onSubmit:ee,onReset:ae,onFocus:Q,onBlur:Y,onClearServerErrors:f,ref:K,children:a.jsxs(g,{name:"input",serverInvalid:h,children:[a.jsx(v,{children:t}),a.jsxs("div",{className:q.controls,children:[a.jsx(se,{ref:J,...D,onInput:Z,disabled:U||i===2}),X&&a.jsxs("div",{className:q["button-group"],children:[a.jsx(F,{label:y,children:a.jsx(A,{asChild:!0,children:a.jsx(w,{type:"submit",kind:"primary",size:"sm",ref:L,disabled:i!==1,iconOnly:!0,Icon:le})})}),a.jsx(F,{label:P,children:a.jsx(w,{type:"reset",kind:"secondary",size:"sm",ref:S,className:q.button,disabled:i===2,iconOnly:!0,Icon:oe})})]})]}),i===2?a.jsx(j,{children:O}):G,R&&i===3&&a.jsx(V,{children:R}),E&&(i===0||i===1)&&a.jsx(te,{children:d=>(d===void 0||d.valid)&&!h&&a.jsx(T,{children:E})})]})})});try{k.displayName="EditInPlace",k.__docgenInfo={description:`A text box with save/cancel buttons that appear when the field is active.
Since thios control has its own 'save' button, it should *not* appear as part
of a larger form: it exists as its own form that submits separately.`,displayName:"EditInPlace",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If true, disabled the entire component to disallow editing.",name:"disabled",required:!1,type:{name:"boolean"}},onInput:{defaultValue:null,description:"onInput event handler on the text control",name:"onInput",required:!1,type:{name:"(((e: ChangeEvent<HTMLInputElement>) => void) & FormEventHandler<HTMLInputElement>)"}},label:{defaultValue:null,description:"The label for the control",name:"label",required:!0,type:{name:"string"}},serverInvalid:{defaultValue:null,description:`Whether the field is in an error state according to the server validation.

For validation messages, use native validations properties directly, or add custom error messages as children.`,name:"serverInvalid",required:!1,type:{name:"boolean"}},onClearServerErrors:{defaultValue:null,description:"Callback for when the server validation errors should be cleared.",name:"onClearServerErrors",required:!1,type:{name:"(() => void)"}},enableLigatures:{defaultValue:null,description:`Enable contextual alternate ligatures on input text
For example on an in-place editing field
https://github.com/rsms/inter/issues/222
https://github.com/rsms/inter/blob/master/src/features/calt.fea`,name:"enableLigatures",required:!1,type:{name:"boolean"}},onSave:{defaultValue:null,description:"Callback for when the user confirms the change",name:"onSave",required:!1,type:{name:"((e: FormEvent<HTMLFormElement>) => void | Promise<void>)"}},onCancel:{defaultValue:null,description:"Callback for when the user wishes to cancel the change",name:"onCancel",required:!1,type:{name:"((e: FormEvent<HTMLFormElement>) => void)"}},saveButtonLabel:{defaultValue:null,description:"The label for the save button",name:"saveButtonLabel",required:!0,type:{name:"string"}},cancelButtonLabel:{defaultValue:null,description:"The label for the cancel button",name:"cancelButtonLabel",required:!0,type:{name:"string"}},savedLabel:{defaultValue:null,description:`Label to be displayed by the green check at the bottom. Will only be displayed
for 2 seconds after the onSave callback promise resolves successfully.`,name:"savedLabel",required:!1,type:{name:"string"}},savingLabel:{defaultValue:null,description:"The label for the 'in progress' saving caption",name:"savingLabel",required:!0,type:{name:"string"}},helpLabel:{defaultValue:null,description:"Label to be displayed under the input as a help text",name:"helpLabel",required:!1,type:{name:"string"}}}}}catch{}const ve="_root_dgy0u_24",Ne="_field_dgy0u_34",xe="_label_dgy0u_67",Se="_message_dgy0u_98",c={root:ve,field:Ne,"inline-field":"_inline-field_dgy0u_40","inline-field-body":"_inline-field-body_dgy0u_46","inline-field-control":"_inline-field-control_dgy0u_52",label:xe,message:Se,"help-message":"_help-message_dgy0u_104","error-message":"_error-message_dgy0u_108","success-message":"_success-message_dgy0u_112"},I=r.forwardRef(function({children:s,...t},l){const n=u(c.root,t.className);return a.jsx(re,{ref:l,...t,className:n,children:s})});try{I.displayName="Root",I.__docgenInfo={description:`Thin wrapper around Radix UI Root component
https://www.radix-ui.com/docs/primitives/components/form#root`,displayName:"Root",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}const g=r.forwardRef(function({children:s,...t},l){const n=u(c.field,t.className);return a.jsx(W,{ref:l,...t,className:n,children:s})});try{g.displayName="Field",g.__docgenInfo={description:`Thin wrapper around Radix UI Field component
https://www.radix-ui.com/docs/primitives/components/form#field`,displayName:"Field",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}const M=r.forwardRef(function({className:s,control:t,children:l,...n},o){const f=u(c["inline-field"],s);return a.jsxs(W,{ref:o,...n,className:f,children:[a.jsx("div",{className:c["inline-field-control"],children:t}),a.jsx("div",{className:c["inline-field-body"],children:l})]})});try{M.displayName="InlineField",M.__docgenInfo={description:"",displayName:"InlineField",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}},control:{defaultValue:null,description:"The checkbox/radio control to render alongside the rest of the field.",name:"control",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}}}}}catch{}const v=r.forwardRef(function({children:s,...t},l){const n=u(c.label,t.className);return a.jsx(ne,{ref:l,...t,className:n,children:s})});try{v.displayName="Label",v.__docgenInfo={description:`Thin wrapper around Radix UI Label component
https://www.radix-ui.com/docs/primitives/components/form#label`,displayName:"Label",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}const B=r.forwardRef(function({children:s,className:t,...l},n){const o=u(c.message,c["error-message"],t);return a.jsxs(N,{ref:n,...l,className:o,children:[a.jsx(ie,{}),s]})}),V=r.forwardRef(function({children:s,className:t,...l},n){const o=u(c.message,c["success-message"],t);return a.jsxs(N,{ref:n,...l,className:o,children:[a.jsx(ce,{}),s]})}),j=r.forwardRef(function({children:s,className:t,...l},n){const o=u(c.message,t);return a.jsxs(N,{ref:n,...l,className:o,children:[a.jsx(ue,{}),s]})}),T=r.forwardRef(function({children:s,className:t,...l},n){const o=u(c.message,c["help-message"],t);return a.jsx(N,{ref:n,...l,className:o,children:s})});try{B.displayName="ErrorMessage",B.__docgenInfo={description:"An error message to display below a form control.",displayName:"ErrorMessage",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}try{V.displayName="SuccessMessage",V.__docgenInfo={description:"A success message to display below a form control.",displayName:"SuccessMessage",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}try{j.displayName="LoadingMessage",j.__docgenInfo={description:"A message showing a loading state",displayName:"LoadingMessage",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}try{T.displayName="HelpMessage",T.__docgenInfo={description:"A help message to display below a form control.",displayName:"HelpMessage",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}}}catch{}const H=r.forwardRef(function(s,t){return a.jsx(A,{asChild:!0,children:a.jsx(w,{type:"submit",ref:t,...s})})});try{H.displayName="Submit",H.__docgenInfo={description:"A stylised submit button for forms.",displayName:"Submit",props:{size:{defaultValue:null,description:"The t-shirt size of the button.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},disabled:{defaultValue:null,description:"Note that disabled attribute is not added to buttons, so that disabled buttons are discoverable by keyboard.\n`aria-disabled` attribute is used to indicate button is disabled.\nEvent handlers are not passed to disabled buttons (onClick, onSubmit, etc.)",name:"disabled",required:!1,type:{name:"boolean"}},kind:{defaultValue:null,description:`The type of button.
Note: "destructive" is deprecated, please use the destructive prop in
conjunction with another button kind.`,name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"destructive"'}]}},destructive:{defaultValue:{value:"false"},description:"Whether this button triggers a destructive action.",name:"destructive",required:!1,type:{name:"boolean"}},iconOnly:{defaultValue:null,description:"Whether the button is an icon only button.",name:"iconOnly",required:!1,type:{name:"boolean"}},Icon:{defaultValue:null,description:"An icon to display within the button.",name:"Icon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGElement>>"}}}}}catch{}const z=r.forwardRef(function({className:s,onChange:t,placeholder:l="Search…",name:n,...o},f){const h=u(C.search,s),y=pe();return a.jsx(g,{name:n,asChild:!0,children:a.jsxs(v,{className:h,htmlFor:y,children:[a.jsx(de,{className:C.icon,width:20,height:20}),a.jsx("input",{ref:f,...o,id:y,name:n,type:"search",placeholder:l,onChange:t,className:C.input})]})})});try{z.displayName="Search",z.__docgenInfo={description:"A standalone search component",displayName:"Search",props:{className:{defaultValue:null,description:"The CSS class name",name:"className",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The field name.",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:{value:"Search…"},description:"The input placeholder.",name:"placeholder",required:!1,type:{name:"string"}}}}}catch{}export{k as E,g as F,T as H,M as I,v as L,I as R,H as S,B as a,V as b,z as c};
