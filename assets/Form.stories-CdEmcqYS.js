import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as f}from"./iframe-CLiVn8QR.js";import"./index-CZ3uDPFb.js";import{T as x}from"./Tooltip-Cz6ycZBi.js";import{R as b}from"./Root-DV4Uxe64.js";import{F as u}from"./Field-CdEB8Zx8.js";import{L as o}from"./Label-Hl4U49ah.js";import{T as j}from"./Text-Clx10q7o.js";import{E as a,H as n}from"./Message-C7mKw5Fr.js";import{a as g}from"./Password-C0hyBPPZ.js";import{a as y}from"./MFA-zIkFc1CB.js";import{I as i}from"./InlineField-DTbQXmeZ.js";import{a as v}from"./Checkbox-B0XzVmHe.js";import{a as h}from"./Radio-Be-nEz6S.js";import{a as S}from"./Toggle-CwbZqiv6.js";import{S as C}from"./index-DNH8H6_r.js";import{B as E}from"./Button-CcS-bMfu.js";import"./preload-helper-D9Z9MdNV.js";import"./floating-ui.react-DHwizOQk.js";import"./floating-ui.react-dom-DDAORCef.js";import"./index-CTbGrcai.js";import"./index-Bo7JEoqk.js";import"./index-BsodZ7D5.js";import"./check-circle-solid-CHLhWgTz.js";import"./error-solid-91VyfIiJ.js";import"./InlineSpinner-DET9ToMu.js";import"./spinner-C7GdJUfM.js";import"./visibility-on-DsyJ71Gv.js";import"./Action-CoKWrfzx.js";import"./check-LftgqGRZ.js";import"./index-CaIKslmR.js";import"./index-DDzpyYhR.js";import"./index-CjApmvno.js";import"./index-BOUIzn03.js";import"./UnstyledButton-i55YldPr.js";const p=f.forwardRef(function(r,t){return e.jsx(C,{asChild:!0,children:e.jsx(E,{type:"submit",ref:t,...r})})});try{p.displayName="Submit",p.__docgenInfo={description:"A stylised submit button for forms.",displayName:"Submit",props:{disabled:{defaultValue:null,description:"Note that disabled attribute is not added to buttons, so that disabled buttons are discoverable by keyboard.\n`aria-disabled` attribute is used to indicate button is disabled.\nEvent handlers are not passed to disabled buttons (onClick, onSubmit, etc.)",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"The t-shirt size of the button.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},kind:{defaultValue:null,description:`The type of button.
Note: "destructive" is deprecated, please use the destructive prop in
conjunction with another button kind.`,name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"destructive"'}]}},destructive:{defaultValue:{value:"false"},description:"Whether this button triggers a destructive action.",name:"destructive",required:!1,type:{name:"boolean"}},iconOnly:{defaultValue:null,description:"Whether the button is an icon only button.",name:"iconOnly",required:!1,type:{name:"boolean"}},Icon:{defaultValue:null,description:"An icon to display within the button.",name:"Icon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGElement>>"}}}}}catch{}const I=({disabled:s,invalid:r,readOnly:t})=>e.jsx(x,{children:e.jsxs(b,{children:[e.jsxs(u,{serverInvalid:r,name:"mxid",children:[e.jsx(o,{children:"Username"}),e.jsx(j,{disabled:s,readOnly:t,defaultValue:"Hello world!"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(u,{serverInvalid:r,name:"password",children:[e.jsx(o,{children:"Password"}),e.jsx(g,{disabled:s,readOnly:t,defaultValue:"sup3rS3cur3p4ssw0rd!"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(u,{serverInvalid:r,name:"mfa",children:[e.jsx(o,{children:"MFA"}),e.jsx(y,{disabled:s,readOnly:t,defaultValue:"123"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"remember",control:e.jsx(v,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Remember me"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"radio",control:e.jsx(h,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Option 1"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"radio",control:e.jsx(h,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Option 2"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"toggle",control:e.jsx(S,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(o,{children:"Toggle"}),r?e.jsx(a,{children:"Error message."}):e.jsx(n,{children:"Help message."})]}),e.jsx(p,{disabled:s,children:"Submit"})]})}),ie={title:"Form/Kitchen Sink",component:I,argTypes:{disabled:{type:"boolean"},readOnly:{type:"boolean"},invalid:{type:"boolean"}},args:{disabled:!1,readOnly:!1,invalid:!1}},l={},m={args:{disabled:!0}},d={args:{readOnly:!0}},c={args:{invalid:!0}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"{}",...l.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`{
  args: {
    disabled: true
  }
}`,...m.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:`{
  args: {
    readOnly: true
  }
}`,...d.parameters?.docs?.source}}};c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:`{
  args: {
    invalid: true
  }
}`,...c.parameters?.docs?.source}}};const le=["Normal","Disabled","ReadOnly","Invalid"];export{m as Disabled,c as Invalid,l as Normal,d as ReadOnly,le as __namedExportsOrder,ie as default};
