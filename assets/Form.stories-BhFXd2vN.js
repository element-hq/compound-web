import{j as e}from"./jsx-runtime-BjG_zV1W.js";import{T as v}from"./Tooltip-b_7QlJX3.js";import{R as S,E as a,H as o}from"./Message-DOTYCmQY.js";import{s as u,F as p,L as n}from"./Label-ClpUHLWk.js";import{a as C}from"./Text-BjzCWMCD.js";import{a as _}from"./Password-T0p0dliE.js";import{a as I}from"./MFA-D_x_5_Xf.js";import{r as x}from"./index-7h80QhK_.js";import{F as E,S as k}from"./index-CcYqeSSW.js";import{c as N}from"./index-DUolvyrz.js";import{a as V}from"./Checkbox-BeLBFweK.js";import{a as f}from"./Radio-Bxxa8Rmv.js";import{a as F}from"./Toggle-CwiZSqV3.js";import{B as T}from"./Button-b1sryxZu.js";import"./floating-ui.react-s73wBwnq.js";import"./index-Dmd9PWHg.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./check-circle-solid-D2JtntX_.js";import"./error-8TjxXL1w.js";import"./InlineSpinner-DWo1dIhg.js";import"./spinner-Cqvvv57a.js";import"./visibility-on-Cxxuzjlq.js";import"./Action-D04SSprN.js";import"./index-Dd0GcoKd.js";import"./index-FcPpuNov.js";import"./index-CUcxaC0_.js";import"./index-Ck84dWZn.js";import"./check-BVd1sOli.js";import"./UnstyledButton-Cbxfy2C6.js";const i=x.forwardRef(function({className:r,control:t,children:b,...j},g){const y=N(u["inline-field"],r);return e.jsxs(E,{ref:g,...j,className:y,children:[e.jsx("div",{className:u["inline-field-control"],children:t}),e.jsx("div",{className:u["inline-field-body"],children:b})]})});try{i.displayName="InlineField",i.__docgenInfo={description:"",displayName:"InlineField",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}},control:{defaultValue:null,description:"The checkbox/radio control to render alongside the rest of the field.",name:"control",required:!0,type:{name:"ReactElement<unknown, string | JSXElementConstructor<any>>"}}}}}catch{}const h=x.forwardRef(function(r,t){return e.jsx(k,{asChild:!0,children:e.jsx(T,{type:"submit",ref:t,...r})})});try{h.displayName="Submit",h.__docgenInfo={description:"A stylised submit button for forms.",displayName:"Submit",props:{disabled:{defaultValue:null,description:"Note that disabled attribute is not added to buttons, so that disabled buttons are discoverable by keyboard.\n`aria-disabled` attribute is used to indicate button is disabled.\nEvent handlers are not passed to disabled buttons (onClick, onSubmit, etc.)",name:"disabled",required:!1,type:{name:"boolean"}},kind:{defaultValue:null,description:`The type of button.
Note: "destructive" is deprecated, please use the destructive prop in
conjunction with another button kind.`,name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"destructive"'}]}},destructive:{defaultValue:{value:"false"},description:"Whether this button triggers a destructive action.",name:"destructive",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"The t-shirt size of the button.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},iconOnly:{defaultValue:null,description:"Whether the button is an icon only button.",name:"iconOnly",required:!1,type:{name:"boolean"}},Icon:{defaultValue:null,description:"An icon to display within the button.",name:"Icon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGElement>>"}}}}}catch{}const w=({disabled:s,invalid:r,readOnly:t})=>e.jsx(v,{children:e.jsxs(S,{children:[e.jsxs(p,{serverInvalid:r,name:"mxid",children:[e.jsx(n,{children:"Username"}),e.jsx(C,{disabled:s,readOnly:t,defaultValue:"Hello world!"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsxs(p,{serverInvalid:r,name:"password",children:[e.jsx(n,{children:"Password"}),e.jsx(_,{disabled:s,readOnly:t,defaultValue:"sup3rS3cur3p4ssw0rd!"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsxs(p,{serverInvalid:r,name:"mfa",children:[e.jsx(n,{children:"MFA"}),e.jsx(I,{disabled:s,readOnly:t,defaultValue:"123"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"remember",control:e.jsx(V,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(n,{children:"Remember me"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"radio",control:e.jsx(f,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(n,{children:"Option 1"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"radio",control:e.jsx(f,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(n,{children:"Option 2"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsxs(i,{serverInvalid:r,name:"toggle",control:e.jsx(F,{disabled:s,readOnly:t,defaultChecked:!0}),children:[e.jsx(n,{children:"Toggle"}),r?e.jsx(a,{children:"Error message."}):e.jsx(o,{children:"Help message."})]}),e.jsx(h,{disabled:s,children:"Submit"})]})}),le={title:"Form/Kitchen Sink",component:w,argTypes:{disabled:{type:"boolean"},readOnly:{type:"boolean"},invalid:{type:"boolean"}},args:{disabled:!1,readOnly:!1,invalid:!1}},l={},d={args:{disabled:!0}},c={args:{readOnly:!0}},m={args:{invalid:!0}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"{}",...l.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:`{
  args: {
    disabled: true
  }
}`,...d.parameters?.docs?.source}}};c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:`{
  args: {
    readOnly: true
  }
}`,...c.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`{
  args: {
    invalid: true
  }
}`,...m.parameters?.docs?.source}}};const de=["Normal","Disabled","ReadOnly","Invalid"];export{d as Disabled,m as Invalid,l as Normal,c as ReadOnly,de as __namedExportsOrder,le as default};
