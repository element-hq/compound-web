import{j as c}from"./jsx-runtime-f6d73c06.js";import{r as y}from"./index-8ee6c85d.js";const n=y.forwardRef(function({as:e,children:a,className:d,disabled:t,...s},r){const l=e||"button",{onClick:i,onSubmit:u,...p}=s,b=t?{}:{onClick:i,onSubmit:u};return c.jsx(l,{...p,ref:r,className:d,role:e==="a"?"link":"button",tabIndex:0,...b,"aria-disabled":t,children:a})});try{n.displayName="UnstyledButton",n.__docgenInfo={description:"Unstyled button component. Can be disabled and optionalally rendered as an anchor.\nIntended to be wrapped with styles and exported as new button type - eg `IconButton` or `Button`.\n\nNot to be used externally.",displayName:"UnstyledButton",props:{as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:"ElementType<any>"}},disabled:{defaultValue:null,description:"Note that disabled attribute is not added to buttons, so that disabled buttons are discoverable by keyboard.\n`aria-disabled` attribute is used to indicate button is disabled.\nEvent handlers are not passed to disabled buttons (onClick, onSubmit).",name:"disabled",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<ComponentRef<C>>"}}}}}catch{}export{n as U};
//# sourceMappingURL=UnstyledButton-60dcee3b.js.map
