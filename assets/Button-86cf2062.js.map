{"version":3,"file":"Button-86cf2062.js","sources":["../../src/components/Button/Button.tsx"],"sourcesContent":["/*\nCopyright 2023  New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport classNames from \"classnames\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport styles from \"./Button.module.css\";\n\ntype ButtonProps<C extends React.ElementType> = {\n  /**\n   * The underlying HTML element to use. Can be a button or a link.\n   * @default \"button\"\n   */\n  as?: C;\n  /**\n   * The type of button.\n   */\n  kind?: \"primary\" | \"secondary\" | \"tertiary\" | \"destructive\"; // TODO: Refine the naming\n  /**\n   * The t-shirt size of the button.\n   */\n  size?: \"sm\" | \"lg\";\n  /**\n   * The CSS class name.\n   */\n  className?: string;\n  /**\n   * An icon to display within the button.\n   */\n  Icon?: ComponentType<React.SVGAttributes<SVGElement>>;\n} & React.ComponentPropsWithoutRef<C>;\n\n/**\n * A button component that can be transformed into a link, but keep the button\n * styling using the `as` property.\n */\nexport const Button = <C extends React.ElementType = \"button\">({\n  as,\n  kind = \"primary\",\n  size = \"lg\",\n  children,\n  className,\n  Icon,\n  ...props\n}: PropsWithChildren<ButtonProps<C>>): React.ReactElement => {\n  const Component = as || \"button\";\n  const classes = classNames(styles.button, className, {\n    [styles[\"has-icon\"]]: Icon,\n  });\n  const iconSize = size === \"lg\" ? 24 : 20;\n\n  return (\n    <Component\n      {...props}\n      className={classes}\n      data-kind={kind}\n      data-size={size}\n      // All elements roles should be overriden at the exceptions of anchors\n      // We want them to behave like links but look like buttons\n      role={as === \"a\" ? \"link\" : \"button\"}\n      tabIndex={0}\n    >\n      {Icon && (\n        <Icon\n          width={iconSize}\n          height={iconSize}\n          className={styles.icon}\n          aria-hidden={true}\n        />\n      )}\n      {children}\n    </Component>\n  );\n};\n"],"names":["Button","as","kind","size","children","className","Icon","props","Component","classes","classNames","styles","iconSize","jsxs","jsx"],"mappings":"8JAgDOA,EAAA,CAAA,CAAwD,GAAAC,EAC7D,KAAAC,EAAA,UACO,KAAAC,EAAA,KACA,SAAAC,EACP,UAAAC,EACA,KAAAC,EACA,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAP,GAAA,SACAQ,EAAAC,EAAAC,EAAA,OAAAN,EAAA,CAAqD,CAAAM,EAAA,UAAA,CAAA,EAAAL,CAC7B,CAAA,EAExBM,EAAAT,IAAA,KAAA,GAAA,GAEA,OAAAU,EAAA,KACEL,EAAC,CAAA,GAAAD,EACK,UAAAE,EACO,YAAAP,EACA,YAAAC,EACA,KAAAF,IAAA,IAAA,OAAA,SAGiB,SAAA,EAClB,SAAA,CAETK,GAAAQ,EAAA,IACCR,EAAC,CAAA,MAAAM,EACQ,OAAAA,EACC,UAAAD,EAAA,KACU,cAAA,EACL,CAAA,EACfP,CAED,CAAA,CAAA,CAGP"}