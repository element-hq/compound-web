import{j as e}from"./jsx-runtime-f6d73c06.js";import{S as g}from"./user-profile-bf393815.js";import{S as b,a as f,M,b as S}from"./MenuDivider-4c4ce48a.js";import{r as _}from"./index-8ee6c85d.js";import{c as w}from"./index-e131923d.js";import{M as t}from"./MenuItem-8a82c6bb.js";import"./_commonjsHelpers-de833af9.js";import"./Text-8be2a38d.js";import"./Typography-632d64e2.js";const I="_bg_7r43h_17",h="_drawer_7r43h_26",x="_body_7r43h_60",s={bg:I,drawer:h,body:x};let o;/android/i.test(navigator.userAgent)?o="android":/iPad|iPhone|iPod|Mac/.test(navigator.userAgent)&&"ontouchend"in document?o="ios":o="other";const n=_.forwardRef(({title:a,children:d,className:m,...u},p)=>e.jsx("div",{ref:p,className:w(m,s.drawer),"aria-label":a,"data-platform":o,...u,role:"menu",children:e.jsx("div",{className:s.body,children:d})}));n.displayName="DrawerMenu";try{n.displayName="DrawerMenu",n.__docgenInfo={description:"A menu in a drawer, as commonly seen on mobile.",displayName:"DrawerMenu",props:{title:{defaultValue:null,description:"The menu title.",name:"title",required:!0,type:{name:"string"}},children:{defaultValue:null,description:"The menu contents.",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}const E={title:"Menu/DrawerMenu",component:n,argTypes:{},args:{}},y=a=>e.jsxs(e.Fragment,{children:[e.jsx("div",{className:s.bg}),e.jsxs(n,{...a,title:"Settings",children:[e.jsx(t,{Icon:g,label:"Profile",onSelect:()=>{}}),e.jsx(t,{Icon:b,label:"Notifications",onSelect:()=>{}}),e.jsx(t,{Icon:f,label:"Feedback",onSelect:()=>{}}),e.jsx(M,{}),e.jsx(t,{kind:"critical",Icon:S,label:"Sign out",onSelect:()=>{}})]})]}),r=y.bind({});r.args={};var i,l,c;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`args => <>
    <div className={drawerStyles.bg} />
    <DrawerMenuComponent {...args} title="Settings">
      <MenuItem Icon={UserProfileIcon} label="Profile" onSelect={() => {}} />
      <MenuItem Icon={NotificationsIcon} label="Notifications" onSelect={() => {}} />
      <MenuItem Icon={ChatProblemIcon} label="Feedback" onSelect={() => {}} />
      <MenuDivider />
      <MenuItem kind="critical" Icon={LeaveIcon} label="Sign out" onSelect={() => {}} />
    </DrawerMenuComponent>
  </>`,...(c=(l=r.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const F=["DrawerMenu"];export{r as DrawerMenu,F as __namedExportsOrder,E as default};
//# sourceMappingURL=DrawerMenu.stories-47b47221.js.map
