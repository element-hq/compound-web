import{j as n}from"./jsx-runtime-DR9Q75dM.js";import{r as d}from"./index-DRjF_FHU.js";import{c as u}from"./index-lhGYx47h.js";const k="_link_ue21z_17",f={link:k},r=d.forwardRef(function({children:o,className:t,kind:l="primary",size:m="medium",...c},p){return n.jsx("a",{ref:p,...c,rel:"noreferrer noopener",className:u(f.link,t),"data-kind":l,"data-size":m,children:o})});try{r.displayName="Link",r.__docgenInfo={description:"A link component.",displayName:"Link",props:{className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:{value:"medium"},description:"The size of link.",name:"size",required:!1,type:{name:"enum",value:[{value:'"medium"'},{value:'"small"'}]}},kind:{defaultValue:{value:"primary"},description:"The type of link.",name:"kind",required:!1,type:{name:"enum",value:[{value:'"critical"'},{value:'"primary"'}]}}}}}catch{}const x={title:"Link",component:r,tags:["autodocs"],argTypes:{},args:{size:"medium"}},i=s=>n.jsx(r,{...s,children:"Text link"}),e=i.bind({});e.args={};const a=i.bind({});a.args={size:"small"};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:"args => <LinkComponent {...args}>Text link</LinkComponent>",...e.parameters?.docs?.source}}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"args => <LinkComponent {...args}>Text link</LinkComponent>",...a.parameters?.docs?.source}}};const L=["Round","Small"];export{e as Round,a as Small,L as __namedExportsOrder,x as default};
