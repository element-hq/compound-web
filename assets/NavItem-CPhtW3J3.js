import{j as s}from"./jsx-runtime-BjG_zV1W.js";import{c as b}from"./index-DUolvyrz.js";import{r as d}from"./index-7h80QhK_.js";const c={"nav-bar":"_nav-bar_135dy_16","nav-bar-items":"_nav-bar-items_135dy_22","nav-tab":"_nav-tab_135dy_33","nav-item":"_nav-item_135dy_55"},u=({children:e,className:a,role:t,"aria-label":n,...i})=>{const r=b(a,c["nav-bar"]),o=t!=="tablist"?{role:"navigation","aria-label":n}:{role:"presentation"},l=t==="tablist"?{role:"tablist","aria-label":n}:{};return s.jsx("nav",{...o,...i,className:r,children:s.jsx("ul",{...l,className:c["nav-bar-items"],children:e})})};try{u.displayName="NavBar",u.__docgenInfo={description:"A navigation bar component",displayName:"NavBar",props:{className:{defaultValue:null,description:"The CSS class name",name:"className",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Require a label for navigation landmarks",name:"aria-label",required:!0,type:{name:"string"}},role:{defaultValue:null,description:`Accessibility role that defaults to navigation.

If you pass tablist you must also pass \`aria-controls\` as prop to your NavItem and must
ensure that the conditions stated in https://www.w3.org/WAI/ARIA/apg/patterns/tabs/#wai-ariaroles,states,andproperties
are met.`,name:"role",required:!1,type:{name:"enum",value:[{value:'"navigation"'},{value:'"tablist"'}]}}}}}catch{}const p=d.forwardRef(function({children:a,href:t,onClick:n,...i},r){return s.jsx("a",{href:t,onClick:n,className:c["nav-item"],...i,ref:r,children:a})}),f=d.forwardRef(function({children:a,disabled:t,onClick:n,...i},r){return s.jsx("button",{onClick:n,className:c["nav-item"],disabled:t,ref:r,...i,children:a})}),_=e=>"href"in e&&!!e.href,v=d.forwardRef(function(a,t){const n=a["aria-controls"],r=!!n?{"aria-controls":n,role:"tab","aria-selected":a.active}:{"aria-current":a.active?!0:void 0},o={...a};delete o.active;let l;if(_(o)){const m=t;l=s.jsx(p,{...o,...r,ref:m})}else{const m=t;l=s.jsx(f,{...o,...r,ref:m})}return s.jsx("li",{className:c["nav-tab"],"data-current":a.active?!0:void 0,role:"presentation",children:l})});try{v.displayName="NavItem",v.__docgenInfo={description:`A navigation item component to be used with a navigation bar.
Will render an anchor when href is provided, otherwise a button element.`,displayName:"NavItem",props:{active:{defaultValue:null,description:"",name:"active",required:!1,type:{name:"boolean"}}}}}catch{}export{u as N,v as a};
