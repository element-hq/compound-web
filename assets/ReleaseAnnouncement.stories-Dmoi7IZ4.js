import{j as o}from"./jsx-runtime-DoxjgJx5.js";import{r}from"./index-Cu9bd8lq.js";import{B as C}from"./Button-DrAMl4OR.js";import"./IconButton-j0Nfr_Qv.js";import{a as R,b as T,i as k,j,c as O,o as V,s as q,d as B,l as E,u as F,F as I,m as M,k as N}from"./floating-ui.react-C9uQe9t5.js";import{T as A}from"./Text-BrcN_buA.js";import"./index-C2KoGaFq.js";import"./UnstyledButton-CUaD5tB8.js";import"./IndicatorIcon-iinDG_Nf.js";import"./index-MTP5U5xA.js";import"./Typography-BcgMUEGb.js";const L="_content_1oa1y_17",S="_header_1oa1y_46",P="_description_1oa1y_52",H="_button_1oa1y_57",z="_arrow_1oa1y_62",c={content:L,header:S,description:P,button:H,arrow:z},w=r.createContext(null);function g(){const e=r.useContext(w);if(e==null)throw new Error("ReleaseAnnouncement components must be wrapped in <ReleaseAnnouncement />");return e}function f({open:e,header:n,description:a,closeLabel:t,placement:m,onClick:u}){const v=R(),_=R(),d=r.useRef(null),h=T({placement:m,open:e,whileElementsMounted:O,middleware:[V(16),q({limiter:E({offset:50})}),B({element:d})]}),y=k(h.context),x=j([y]);return r.useMemo(()=>({open:e,...h,...x,labelId:v,descriptionId:_,header:n,description:a,closeLabel:t,onClick:u,arrowRef:d}),[e,y,x,h,v,_,n,a,t,u,d])}try{f.displayName="useReleaseAnnouncement",f.__docgenInfo={description:"This hook provides the necessary props to create a release announcement.",displayName:"useReleaseAnnouncement",props:{open:{defaultValue:null,description:"Whether the release announcement is open.",name:"open",required:!0,type:{name:"boolean"}},header:{defaultValue:null,description:"The header of the release announcement.",name:"header",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"The description of the release announcement.",name:"description",required:!0,type:{name:"string"}},closeLabel:{defaultValue:null,description:"The label of the close button.",name:"closeLabel",required:!0,type:{name:"string"}},placement:{defaultValue:null,description:"The placement of the release announcement.",name:"placement",required:!0,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"bottom"'},{value:'"top"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},onClick:{defaultValue:null,description:"The event handler for the close button.",name:"onClick",required:!0,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}}}catch{}function p({children:e,placement:n="right",...a}){const t=f({placement:n,...a});return o.jsxs(w.Provider,{value:t,children:[o.jsx(D,{children:e}),o.jsx(W,{children:o.jsx(K,{})})]})}function D({children:e}){const n=g(),a=e?.ref,t=F([n.refs.setReference,a]);if(!r.isValidElement(e))throw new Error("ReleaseAnnouncement anchor must be a single valid React element");return r.cloneElement(e,n.getReferenceProps({ref:t,...e.props,...n.open&&{"aria-describedby":n.getFloatingProps().id}}))}function W({children:e}){const{context:n,arrowRef:a,...t}=g();return n.open?o.jsx(I,{children:o.jsx(M,{context:n,modal:!1,children:o.jsxs("div",{ref:t.refs.setFloating,style:t.floatingStyles,"aria-labelledby":t.labelId,"aria-describedby":t.descriptionId,...t.getFloatingProps(),className:c.content,children:[o.jsx(N,{ref:a,context:n,width:20,height:12,className:c.arrow}),e]})})}):null}function K(){const{labelId:e,descriptionId:n,header:a,description:t,closeLabel:m,onClick:u}=g();return o.jsxs(o.Fragment,{children:[o.jsx(A,{as:"h3",id:e,className:c.header,size:"lg",weight:"semibold",children:a}),o.jsx(A,{as:"span",id:n,className:c.description,size:"sm",weight:"regular",children:t}),o.jsx(C,{size:"sm",kind:"secondary",className:c.button,onClick:u,children:m})]})}try{p.displayName="ReleaseAnnouncement",p.__docgenInfo={description:`The ReleaseAnnouncement component purpose is to inform the user of a new available feature.
This component is a floating component that will appear next to an anchor.`,displayName:"ReleaseAnnouncement",props:{placement:{defaultValue:{value:"right"},description:"The placement of the component",name:"placement",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"bottom"'},{value:'"top"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},open:{defaultValue:null,description:"Whether the release announcement is open.",name:"open",required:!0,type:{name:"boolean"}},onClick:{defaultValue:null,description:"The event handler for the close button.",name:"onClick",required:!0,type:{name:"MouseEventHandler<HTMLButtonElement>"}},header:{defaultValue:null,description:"The header of the release announcement.",name:"header",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"The description of the release announcement.",name:"description",required:!0,type:{name:"string"}},closeLabel:{defaultValue:null,description:"The label of the close button.",name:"closeLabel",required:!0,type:{name:"string"}}}}}catch{}const oe={title:"Release Announcement",component:p,tags:["autodocs"],argTypes:{},args:{header:"Notifications have moved",description:"From now on, click the icon here to view your notifications.",placement:"right",closeLabel:"Ok"}},b=e=>{const[n,a]=r.useState(!0);return o.jsx(p,{...e,open:n,onClick:()=>a(!1),children:o.jsx(C,{onClick:()=>a(t=>!t),children:"Open menu"})})},s=b.bind({});s.args={};const l=b.bind({});l.args={header:"A multi line header which is taking multiple lines",description:"A multi line description which is taking multiple lines. The OK button should be vertically centred."};const i=b.bind({});i.args={placement:"bottom"};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`args => {
  const [open, setOpen] = useState(true);
  return <ReleaseAnnouncementComponent {...args} open={open} onClick={() => setOpen(false)}>
      <Button onClick={() => setOpen(_open => !_open)}>Open menu</Button>
    </ReleaseAnnouncementComponent>;
}`,...s.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:`args => {
  const [open, setOpen] = useState(true);
  return <ReleaseAnnouncementComponent {...args} open={open} onClick={() => setOpen(false)}>
      <Button onClick={() => setOpen(_open => !_open)}>Open menu</Button>
    </ReleaseAnnouncementComponent>;
}`,...l.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`args => {
  const [open, setOpen] = useState(true);
  return <ReleaseAnnouncementComponent {...args} open={open} onClick={() => setOpen(false)}>
      <Button onClick={() => setOpen(_open => !_open)}>Open menu</Button>
    </ReleaseAnnouncementComponent>;
}`,...i.parameters?.docs?.source}}};const ae=["Default","MultiLinesContent","BottomPlacement"];export{i as BottomPlacement,s as Default,l as MultiLinesContent,ae as __namedExportsOrder,oe as default};
