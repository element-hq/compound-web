{"version":3,"file":"MFA-371707db.js","sources":["../../src/components/Form/Controls/MFA/MFA.tsx"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\nCopyright 2023 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, {\n  ComponentProps,\n  ComponentRef,\n  forwardRef,\n  PropsWithoutRef,\n} from \"react\";\n\nimport styles from \"./MFA.module.css\";\nimport classNames from \"classnames\";\nimport { Control } from \"@radix-ui/react-form\";\n\ntype DigitProps = {\n  filled: boolean;\n  selected: boolean;\n};\n\nconst Digit: React.FC<DigitProps> = ({ filled, selected }) => (\n  <div\n    className={styles.digit}\n    aria-hidden=\"true\"\n    data-filled={filled ? \"\" : undefined}\n    data-selected={selected ? \"\" : undefined}\n  />\n);\n\ntype MFAProps = {\n  className?: string;\n  length?: number;\n  disabled?: boolean;\n} & Omit<\n  React.ComponentProps<\"input\">,\n  \"type\" | \"inputMode\" | \"pattern\" | \"autoComplete\"\n>;\n\nexport const MFAInput = forwardRef(function MFAInput(\n  { className, length = 6, ...props }: PropsWithoutRef<MFAProps>,\n  ref: React.ForwardedRef<HTMLInputElement>,\n) {\n  const classes = classNames(styles.container, className);\n  const [currentLength, setCurrentLength] = React.useState(0);\n  const [selection, setSelection] = React.useState<null | [number, number]>(\n    null,\n  );\n\n  const update = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    const input = event.currentTarget;\n    setCurrentLength(input.value?.length);\n\n    if (\n      document.activeElement !== input ||\n      input.selectionStart === null ||\n      input.selectionEnd === null\n    ) {\n      setSelection(null);\n    } else {\n      setSelection([input.selectionStart, input.selectionEnd]);\n    }\n  };\n\n  return (\n    <div className={classes}>\n      <input\n        {...props}\n        inputMode=\"numeric\"\n        // Showing digits on mobile browsers. Using numbers is not really suited\n        // as it often adds a way to increment or decrement the current value\n        // which is not interesting for this use case\n        type=\"text\"\n        minLength={0}\n        maxLength={length}\n        className={styles.control}\n        pattern={`\\\\d{${length}}`}\n        autoComplete=\"one-time-code\"\n        onSelect={update}\n        onFocus={update}\n        onBlur={update}\n        onMouseDown={update}\n        onMouseMove={update}\n        onMouseUp={update}\n        onChange={update}\n        ref={ref}\n      />\n      {Array.from(Array(length).keys()).map((index) => (\n        <Digit\n          key={index}\n          filled={index < currentLength}\n          selected={\n            !!selection && index >= selection[0] && index < selection[1]\n          }\n        />\n      ))}\n    </div>\n  );\n});\n\nexport const MFAControl = forwardRef<\n  ComponentRef<typeof MFAInput>,\n  ComponentProps<typeof MFAInput>\n>(function ActionControl(props, ref) {\n  return (\n    <Control asChild>\n      <MFAInput ref={ref} {...props} />\n    </Control>\n  );\n});\n"],"names":["Digit","filled","selected","jsx","styles","MFAInput","forwardRef","className","length","props","ref","classes","classNames","currentLength","setCurrentLength","React","selection","setSelection","update","event","input","_a","jsxs","index","MFAControl","Control"],"mappings":"uRAiCAA,EAAA,CAAA,CAAA,OAAAC,EAAA,SAAAC,CAAA,IAAAC,EAAA,IACE,MAAC,CAAA,UAAAC,EAAA,MACmB,cAAA,OACN,cAAAH,EAAA,GAAA,OACe,gBAAAC,EAAA,GAAA,MACI,CACjC,EAYKG,EAAAC,EAAAA,WAAA,SAAA,CAAA,UAAAC,EAAA,OAAAC,EAAA,EAAA,GAAAC,CAAA,EAAAC,EAAA,CAIL,MAAAC,EAAAC,EAAAR,EAAA,UAAAG,CAAA,EACA,CAAAM,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAwC,IACtC,EAGFG,EAAAC,GAAA,OACE,MAAAC,EAAAD,EAAA,cACAL,GAAAO,EAAAD,EAAA,QAAA,YAAAC,EAAA,MAAA,EAEA,SAAA,gBAAAD,GAAAA,EAAA,iBAAA,MAAAA,EAAA,eAAA,KAKEH,EAAA,IAAA,EAEAA,EAAA,CAAAG,EAAA,eAAAA,EAAA,YAAA,CAAA,CACF,EAGF,OAAAE,EAAA,KAAA,MAAA,CAAA,UAAAX,EAAA,SAAA,CAEIR,EAAA,IAAA,QAAC,CAAA,GAAAM,EACK,UAAA,UACM,KAAA,OAIL,UAAA,EACM,UAAAD,EACA,UAAAJ,EAAA,QACO,QAAA,OAAAI,CAAA,IACI,aAAA,gBACT,SAAAU,EACH,QAAAA,EACD,OAAAA,EACD,YAAAA,EACK,YAAAA,EACA,UAAAA,EACF,SAAAA,EACD,IAAAR,CACV,CAAA,EACF,MAAA,KAAA,MAAAF,CAAA,EAAA,KAAA,CAAA,EAAA,IAAAe,GAAApB,EAAA,IAEEH,EAAC,CAAA,OAAAuB,EAAAV,EAEiB,SAAA,CAAA,CAAAG,GAAAO,GAAAP,EAAA,CAAA,GAAAO,EAAAP,EAAA,CAAA,CAE6C,EAAAO,CAHxD,CAAA,CAMR,CAAA,CAAA,CAGP,CAAA,EAEOC,EAAAlB,EAAAA,WAAA,SAAAG,EAAAC,EAAA,CAIL,OAAAP,EAAA,IAAAsB,EAAA,CAAA,QAAA,GAAA,SAAAtB,MAAAE,EAAA,CAAA,IAAAK,EAAA,GAAAD,CAAA,CAAA,CAAA,CAAA,CAKF,CAAA"}