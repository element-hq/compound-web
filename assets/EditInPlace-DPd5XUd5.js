import{j as t}from"./jsx-runtime-DoxjgJx5.js";import{c as a}from"./index-C2KoGaFq.js";import{r as n,a as _}from"./index-Cu9bd8lq.js";import{T as I}from"./Text-BTQEANK3.js";import{u as c}from"./useId-D5m2XpUu.js";import{S as x}from"./check-CXsFGzWm.js";import{S as k}from"./close-D55JIkKE.js";import{S as L}from"./error-YokBWoNX.js";const R="_container_1t6hl_17",P="_label_1t6hl_21",D="_controls_1t6hl_27",F="_button_1t6hl_33",A="_control_1t6hl_27",e={container:R,label:P,controls:D,"button-group":"_button-group_1t6hl_33",button:F,"primary-button":"_primary-button_1t6hl_52","primary-button-disabled":"_primary-button-disabled_1t6hl_61",control:A,"container-error":"_container-error_1t6hl_84","caption-line":"_caption-line_1t6hl_92","caption-icon":"_caption-icon_1t6hl_96","caption-icon-error":"_caption-icon-error_1t6hl_104","caption-icon-saved":"_caption-icon-saved_1t6hl_108","caption-text":"_caption-text_1t6hl_119","caption-text-error":"_caption-text-error_1t6hl_124","caption-text-saved":"_caption-text-saved_1t6hl_128"},v=n.forwardRef(function({className:g,label:j,onSave:u,onCancel:d,saveButtonLabel:S,cancelButtonLabel:N,disableSaveButton:p,error:l,savedLabel:m,...w},T){const r=c(),b=c(),h=c(),q=a(e.container,g,{[e["container-error"]]:!!l}),[C,s]=_.useState(!1),o=n.useRef(null),f=n.useRef(null),i=n.useRef(null);_.useEffect(()=>()=>{o.current&&clearTimeout(o.current)},[]);const E=n.useCallback(async B=>{B.preventDefault();try{await u(),f.current?.blur(),s(!0),o.current=setTimeout(()=>{s(!1)},2e3)}catch{}},[s,u,o]),V=n.useCallback(()=>{i.current?.blur(),d()},[i,d]);return t.jsxs("form",{className:q,id:r,onSubmit:E,children:[t.jsx("div",{className:e.label,id:b,children:j}),t.jsxs("div",{className:e.controls,children:[t.jsx(I,{ref:T,...w,className:e.control,"aria-labelledby":b,"aria-invalid":!!l,"aria-errormessage":l?h:void 0}),t.jsxs("div",{className:e["button-group"],children:[t.jsx("button",{type:"submit",className:a(e.button,e["primary-button"],{[e["primary-button-disabled"]]:p}),ref:f,"aria-controls":r,"aria-label":S,disabled:p,children:t.jsx(x,{})}),t.jsx("button",{type:"button",role:"button",ref:i,className:e.button,onClick:V,"aria-controls":r,"aria-label":N,children:t.jsx(k,{})})]})]}),l&&t.jsxs("div",{className:e["caption-line"],children:[t.jsx(L,{className:a(e["caption-icon"],e["caption-icon-error"])}),t.jsx("span",{id:h,className:a(e["caption-text"],e["caption-text-error"]),children:l})]}),m&&C&&t.jsxs("div",{className:e["caption-line"],children:[t.jsx("div",{className:a(e["caption-icon"],e["caption-icon-saved"]),children:t.jsx(x,{})}),t.jsx("span",{className:a(e["caption-text"],e["caption-text-saved"]),children:m})]})]})});try{v.displayName="EditInPlace",v.__docgenInfo={description:`A text box with save/cancel buttons that appear when the field is active.
Since thios control has its own 'save' button, it should *not* appear as part
of a larger form: it exists as its own form that submits separately.`,displayName:"EditInPlace",props:{label:{defaultValue:null,description:"The label for the control",name:"label",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"The CSS class name.",name:"className",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The content of the text box",name:"value",required:!1,type:{name:"string | (string & readonly string[])"}},enableLigatures:{defaultValue:null,description:`Enable contextual alternate ligatures on input text
For example on an in-place editing field
https://github.com/rsms/inter/issues/222
https://github.com/rsms/inter/blob/master/src/features/calt.fea`,name:"enableLigatures",required:!1,type:{name:"boolean"}},onSave:{defaultValue:null,description:"Callback for when the user confirms the change",name:"onSave",required:!0,type:{name:"() => Promise<void>"}},onCancel:{defaultValue:null,description:"Calback for when the user wishes to cancel the change",name:"onCancel",required:!0,type:{name:"() => void"}},saveButtonLabel:{defaultValue:null,description:"The label for the save button",name:"saveButtonLabel",required:!0,type:{name:"string"}},cancelButtonLabel:{defaultValue:null,description:"The label for the cancel button",name:"cancelButtonLabel",required:!1,type:{name:"string"}},disableSaveButton:{defaultValue:null,description:`True to disable the save button, false to enasble.
Default: false (enabled)`,name:"disableSaveButton",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:`Error message to be displayed below the box. If supplied, will disable the
save button.`,name:"error",required:!1,type:{name:"string"}},savedLabel:{defaultValue:null,description:`Label to be displayed by the green check at the bottom. Will only be displayed
for 2 seconds after the onSave callback promise resolves successfully.`,name:"savedLabel",required:!1,type:{name:"string"}}}}}catch{}export{v as E};
